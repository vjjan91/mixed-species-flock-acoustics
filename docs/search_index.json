[["index.html", "Source code and supporting information for Using BirdNET to identify mixed-species flocking bird species in the Western Ghats Section 1 Introduction 1.1 Attribution 1.2 Data access 1.3 Data processing", " Source code and supporting information for Using BirdNET to identify mixed-species flocking bird species in the Western Ghats Vijay Ramesh Priyanka Hariharan Last compiled on 09 July, 2025 Section 1 Introduction This is the readable version that showcases analyses using BirdNET to carry out automated identification of bird species that participate in mixed-species flocks. In this repository, we focus our analyses on thirteen species alone that are considered to be important species in a flock. The list of 13 species include: - Indian White-eye - Greenish Warbler - Orange Minivet - Velvet-fronted Nuthatch - Yellow-browed Bulbul - Greater Racket-tailed Drongo - Ashy Drongo - Indian Yellow Tit - Green Warbler - Large-billed Leaf Warbler - Gray-headed Canary-Flycatcher - Nilgiri Flycatcher - Brown-cheeked Fulvetta Using BirdNET Analyzer GUI v2.0.0 and previously written code and steps here, we use previously set thresholds (except for three species, the Gray-headed Canary-Flycatcher, Nilgiri Flycatcher and Ashy Drongo) to filter all audio detections with a probability of detection of 0.95. Upon running analyses, the model did not detect any instances of the Gray-headed Canary-Flycatcher or the Nilgiri Flycatcher. The model did not perform well enough for us to set thresholds for the Ashy Drongo and all instances were manually verified. 1.1 Attribution Please contact the following in case of interest in the project. Vijay Ramesh (repo maintainer) Postdoctoral Research Associate, Cornell Lab of Ornithology 1.2 Data access The data used in this work will be archived on Zenodo. 1.3 Data processing The data processing for this project is described in the following sections. Navigate through them using the links in the sidebar. "],["exploring-outputs-from-birdnet.html", "Section 2 Exploring outputs from BirdNET 2.1 Install required libraries 2.2 Loading the acoustic data and filtering outputs above a threshold 2.3 Including the Ashy Drongo 2.4 Curating the dataset with Ashy Drongo", " Section 2 Exploring outputs from BirdNET Please note that thresholds were previously set for the target list of species, following analysis that were carried out here: https://vjjan91.github.io/paired-pointCount-acoustics/exploring-outputs-from-birdnet.html In this script, we use previously set thresholds for a subset of species in our study. 2.1 Install required libraries library(tidyverse) library(dplyr) library(stringr) library(ggplot2) library(data.table) library(extrafont) library(sf) library(raster) library(viridis) # for colorblind-friendly colors library(gridExtra) # for arranging multiple plots # for plotting library(scales) library(ggplot2) library(ggspatial) library(colorspace) library(scico) 2.2 Loading the acoustic data and filtering outputs above a threshold We are able to use previously set thresholds for all species, except the Gray-headed Canary-Flycatcher, Nilgiri Flycatcher or the Ashy Drongo. Excluding these three species, we created curated thresholds for each species above which the probability of detecting a species is at 0.95. For a few species for which the detector performed really well (proportion of true positives: false positives &gt; 0.95), we set a random threshold value of 0.25 above which we expect the probability of species detected to be greater than or equal to 0.95. ## curate species thresholds threshold &lt;- read.csv(&quot;results/curatedThresholds-species-list.csv&quot;) ## load the BirdNET output file birdnet_results &lt;- read.csv(&quot;results/birdNET-outputs/BirdNET_CombinedTable.csv&quot;) ## filter species detections above the threshold we chose birdnet_subset &lt;- birdnet_results %&gt;% inner_join(threshold, by = c(&quot;Common.name&quot; = &quot;species&quot;)) %&gt;% filter(Confidence &gt;= threshold) %&gt;% mutate(filename_pattern = basename(File) %&gt;% sub(&quot;.*\\\\\\\\([0-9]{8}_[0-9]{4}_[A-Z0-9]+)\\\\.WAV&quot;, &quot;\\\\1&quot;, .)) %&gt;% mutate( date = as.Date(str_extract(filename_pattern, &quot;\\\\d{8}&quot;), format = &quot;%Y%m%d&quot;), site_name = str_extract(filename_pattern, &quot;^[A-Z]+&quot;), site_protocol_code = paste0(site_name, &quot;_MSF&quot;) ) 2.3 Including the Ashy Drongo The model did not perform well enough for us to set thresholds for the Ashy Drongo and all instances were manually verified. So we manually validated every single detection (n=1281) to ascertain true and false positives. Please see this document for information on the validation procedure: https://zenodo.org/records/8415090 # load the .txt file containing true and false positives ashy &lt;- read.table(&quot;results/birdNET-segments/Ashy Drongo/ashy-drongo.selections.txt&quot;, sep = &quot;\\t&quot;, header = T) ## cleaning up the data ashy &lt;- ashy %&gt;% mutate( # extract confidence score confidence = str_extract(Begin.File, &quot;^\\\\d+\\\\.\\\\d+&quot;), # extract site_name site_name = str_extract(Begin.File, &quot;[A-Z]+(?=_\\\\d{8})&quot;), # extract date and format it date = as.Date(str_extract(Begin.File, &quot;\\\\d{8}&quot;), format = &quot;%Y%m%d&quot;), # create filename_pattern filename_pattern = str_extract(Begin.File, &quot;[A-Z]+_\\\\d{8}_\\\\d{6}&quot;) %&gt;% paste0(&quot;.WAV&quot;), # create site_protocol_code site_protocol_code = paste0(site_name, &quot;_MSF&quot;) ) ## filter only detections that are true positives and include scientific_name and common_name ashy &lt;- ashy %&gt;% filter(Valid == 1) %&gt;% mutate(scientific_name = &quot;Dicrurus leucophaeus&quot;) %&gt;% mutate(common_name = &quot;Ashy Drongo&quot;) 2.4 Curating the dataset with Ashy Drongo # add ashy drongo back to the BirdNET subset # clean up column names names(birdnet_subset) names(birdnet_subset) &lt;- c(&quot;start_time&quot;,&quot;end_time&quot;, &quot;scientific_name&quot;,&quot;common_name&quot;,&quot;confidence_score&quot;,&quot;filepath&quot;,&quot;threshold&quot;,&quot;filename&quot;,&quot;date&quot;,&quot;site_name&quot;,&quot;site_protocol_code&quot;) birdnet_subset &lt;- birdnet_subset[,c(1:5,7:11)] names(ashy) names(ashy) &lt;- c(&quot;selection&quot;,&quot;view&quot;,&quot;channel&quot;, &quot;start_time&quot;,&quot;end_time&quot;, &quot;low_freq&quot;, &quot;high_freq&quot;, &quot;filename_for_validation&quot;, &quot;validity&quot;,&quot;confidence_score&quot;,&quot;site_name&quot;,&quot;date&quot;, &quot;filename&quot;,&quot;site_protocol_code&quot;,&quot;scientific_name&quot;,&quot;common_name&quot;) ashy &lt;- ashy[,c(4,5,10:16)] ashy$confidence_score &lt;- as.numeric(ashy$confidence_score) ## create a combined dataset datSubset &lt;- bind_rows(birdnet_subset, ashy) ## create a unique detection id and separate out time datSubset &lt;- datSubset %&gt;% mutate( # Extract time from filename (6 digits after the date) time = str_extract(filename, &quot;\\\\d{6}(?=\\\\.WAV)&quot;), # Remove .WAV and create unique detection ID with start and end times unique_detection_id = paste0( confidence_score, &quot;_&quot;, site_name, &quot;_&quot;, format(date, &quot;%Y%m%d&quot;), &quot;_&quot;, time, &quot;_&quot;, sprintf(&quot;%.1fs&quot;, start_time), &quot;_&quot;, sprintf(&quot;%.1fs&quot;, end_time) ) ) ## write to file write.csv(datSubset, &quot;results/thresholded-acoustic-detections.csv&quot;, row.names = F) "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
